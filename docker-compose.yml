version: '3'

services:
  nginx:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${DOCKER_PATH}:/var/www:cached
    links:
      - workspace
      - php
    networks:
      - shop
    restart: on-failure

  php:
    build:
      context: docker/php
      dockerfile: Dockerfile
    expose:
      - 9000
    links:
      - mysql
      - redis
      - mailhog
    volumes:
      - ${DOCKER_PATH}:/var/www:cached
    tty: true
    stdin_open: true
    environment:
      PHP_IDE_CONFIG: "serverName=docker-server-shop"
    networks:
      - shop
    restart: on-failure

  mysql:
    build:
      context: docker/mysql
      dockerfile: Dockerfile
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: shop
      MYSQL_USER: shop
      MYSQL_PASSWORD: shop
      MYSQL_ROOT_PASSWORD: root
    networks:
      - shop
    restart: on-failure

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - shop

  workspace:
    build:
      context: docker/workspace
      dockerfile: Dockerfile
    user: '${DOCKER_USER}:1000'
    tty: true
    links:
      - mysql
    volumes:
      - ${DOCKER_PATH}:/var/www:cached
    networks:
      - shop
    restart: on-failure

  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    entrypoint: redis-server --appendonly yes
    networks:
      - shop
    restart: on-failure

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  shop:
    driver: bridge

